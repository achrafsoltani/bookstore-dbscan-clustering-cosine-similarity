
DROP TABLE IF EXISTS books;
DROP TABLE IF EXISTS languages;
DROP TABLE IF EXISTS publishers;
DROP TABLE IF EXISTS authors;
DROP TABLE IF EXISTS subjects;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS ratings;

---------------------------------
--      Project Final DDL
---------------------------------

-- Start : extracted from isbndb_2022_09.jsonl

CREATE TABLE books (
    isbn                 character varying(10), -- The ISBN is ten digits long if assigned before 2007, and thirteen digits long if assigned on or after 1 January 2007.
    isbn13               character varying(13) PRIMARY KEY, -- it is probably better to use ISB13 as a primary key
    title                text,
    title_long           text,
    authors              text[],        -- FK todo:  remove array
    subjects             text[],        -- FK todo:  remove array
    language             text,          -- FK todo:  remove array
    publisher            text,          -- FK todo:  remove array
    pages                int2,
    msrp                 numeric(10,2),
    binding              text,
    edition              text,
    image                text,
    dimensions           text,
    related              jsonb,
    synopsis             text,
    date_published_text  text,
    date_published       date
);

CREATE TABLE languages (
    code char(2) PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name character varying(20) NOT NULL
);

CREATE TABLE publishers (
    id int8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name character varying(50) UNIQUE NOT NULL
);

CREATE TABLE authors (
    id int4 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name character varying(100) UNIQUE NOT NULL
);

CREATE TABLE subjects (
    subject_id bigserial PRIMARY KEY,
    name character varying(50) UNIQUE NOT NULL,
    scheme character varying(50)
);

-- End : extracted from isbndb_2022_09.jsonl

-- Start : extracted from Kaggle DataSet

CREATE TABLE users (
    id INT PRIMARY KEY, -- todo: user_id to id
    location character varying(250), -- todo: recheck probably irrelevant to the system // mostly incomplete and badly unstructured data
    age int2
);

CREATE TABLE ratings (
    user_id INT,
    isbn13 character varying(13),
    rating int2,
    CONSTRAINT fk_rating_users  -- this is how to properly write constraints
        FOREIGN KEY (user_id)
            REFERENCES users(id)
                ON DELETE CASCADE,
    CONSTRAINT fk_rating_books
        FOREIGN KEY (isbn13)
            REFERENCES books(isbn13)
                ON DELETE CASCADE
);

-- End : extracted from Kaggle DataSet


